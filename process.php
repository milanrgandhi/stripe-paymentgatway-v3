<?php
  /*
   *  @author   Milan
   *  @about    Stripe Payment Gateway integration in PHP
   * 
   */

if(isset($_POST['action']) && $_POST['action'] == 'stripe') {

	
		   global $stripe_options;
	
		   // load the stripe libraries
		   require_once('init.php');

		   // retrieve the token generated by stripe.js
		   $token = $_POST['token'];
	
		   // check if we are using test mode
		   if(isset($stripe_options['test_mode']) && $stripe_options['test_mode']) {
			   $secret_key = $stripe_options['test_secret_key'];
		   } else {
			   $secret_key = $stripe_options['live_secret_key'];
		   }
	
		   if(isset($_POST['recurring']) && $_POST['recurring'] == 'yes') { // process a recurring payment
	
			   // recurring payment setup will go here


	
		   } else { // process a one-tiome payment


			   $emailcus = trim($_POST['email']);
	
			   // attempt to charge the customer's card
			   try {
				  

				 \Stripe\Stripe::setApiKey("sk_test_3km3ndTZskGRjZErSWiivNFv");

				  ## Fetch all plans ###
				  $gel_Allplans =  \Stripe\Plan::all();
				 
				
				  /*foreach($gel_Allplans->data as $val){						 
					   echo $val->id. "<br/>";

				  }*/

                   ## Check whether customer already exists or not with DB ###
				  $sql_select_name = "SELECT * FROM as_test WHERE cust_email='$emailcus'";
				  $qry_run_com = mysql_query($sql_select_name);
				  $avaliable_customer = false;	
				  
				   if(mysql_num_rows($qry_run_com) ) {
					   
						 $row_data = mysql_fetch_assoc($qry_run_com); 
						 echo $row_data['id']."-".$row_data['cust_id']."-".$row_data['cust_email']." Available<br/>";
                         $existing_cust_id = $row_data['cust_id'];
						 $checkCustomer  = \Stripe\Customer::retrieve($existing_cust_id);
						 $avaliable_customer = true;
						   
				   }  else {

					    $checkCustomer  = NULL; 
					    $avaliable_customer = false;
				   }


                   if($avaliable_customer && !empty($checkCustomer) ) {
						
								
							$subscriptions = \Stripe\Subscription::create(array(
									"customer" => $existing_cust_id,
									"items" => array(
										array(
											"plan" => "monthly-one",
										),
									),
							));	

							if(!empty($subscriptions)){

								   $subscriptions_id = $subscriptions->id;
								   echo $subscriptions_id;
							}

					  
				   } else {


							$customer = \Stripe\Customer::create(array(
								"email" => $emailcus,
								"source" => $token,
							));

							$cust_id    =  $customer->id;
							$cust_email =  $emailcus;
							$datetime   = date("Y-m-d H:i:s");
							
							## Insert into Database ###

							$sql = mysql_query("INSERT INTO as_test (cust_id,cust_email, date) 
							VALUES ('$cust_id',
									'$cust_email',
									'$datetime'
									)" );

							mysql_query($sql);

							$subscriptions = 	\Stripe\Subscription::create(array(
								"customer" => $cust_id,
								"items" => array(
									array(
										"plan" => "monthly-one",
									),
								),
							));	


							if(!empty($subscriptions)){
								
									$subscriptions_id = $subscriptions->id;
									echo $subscriptions_id;
							}

				   }


					
	
			   } catch(\Stripe\Error\Card $e)  {
				   // redirect on failed payment

				   $body = $e->getJsonBody();
				   $err  = $body['error'];
				   $error = $err['message'];

				   echo $error;
				   
				   //echo "Payment has been failed";
			   }
		   }
	
		   // redirect back to our previous page with the added query variable
		  
		   exit;

	   }


















?>
